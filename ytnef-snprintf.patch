From eddd89c34f372e6708db768195140896e0c7522e Mon Sep 17 00:00:00 2001
From: Randall Hand <rhand@magicleap.com>
Date: Fri, 1 Aug 2014 08:57:40 -0500
Subject: [PATCH] Switched 'sprintf' for 'snprintf'

Hopefully this eliminates the potential buffer overflow on
filenames.
---
 ytnef/configure.ac         |  2 +-
 ytnef/src/ytnef/main.c     | 15 ++++++++-------
 ytnef/src/ytnef/settings.h | 27 +++++++++++++++++++++++++++
 ytnef/src/ytnef/utility.c  |  1 +
 ytnef/src/ytnef/vcal.c     |  7 ++++---
 ytnef/src/ytnef/vcard.c    | 19 ++++++++++---------
 ytnef/src/ytnef/vtask.c    |  7 ++++---
 7 files changed, 55 insertions(+), 23 deletions(-)
 create mode 100644 ytnef/src/ytnef/settings.h

diff --git a/ytnef/src/ytnef/main.c b/ytnef/src/ytnef/main.c
index a667135..7cd6f60 100644
--- a/ytnef/src/ytnef/main.c
+++ b/ytnef/src/ytnef/main.c
@@ -3,6 +3,7 @@
 #include <string.h>
 #include <ytnef.h>
 #include "config.h"
+#include "settings.h"
 
 #define PRODID "PRODID:-//The Gauntlet//" PACKAGE_STRING "//EN\n"
 
@@ -117,7 +118,7 @@ void ProcessTNEF(TNEFStruct TNEF) {
     Attachment *p;
     int RealAttachment;
     int object;
-    char ifilename[256];
+    char ifilename[MAX_FILENAME_SIZE+1];
     int i, count;
     int foundCal=0;
 
@@ -158,9 +159,9 @@ void ProcessTNEF(TNEFStruct TNEF) {
                 variableLength buf;
                 if ((buf.data = DecompressRTF(filename, &(buf.size))) != NULL) {
                     if (filepath == NULL) {
-                        sprintf(ifilename, "%s.rtf", TNEF.subject.data);
+                        snprintf(ifilename, MAX_FILENAME_SIZE, "%s.rtf", TNEF.subject.data);
                     } else {
-                        sprintf(ifilename, "%s/%s.rtf", filepath, TNEF.subject.data);
+                        snprintf(ifilename, MAX_FILENAME_SIZE, "%s/%s.rtf", filepath, TNEF.subject.data);
                     }
                     for(i=0; i<strlen(ifilename); i++) 
                         if (ifilename[i] == ' ') 
@@ -256,12 +257,12 @@ void ProcessTNEF(TNEFStruct TNEF) {
                     filename = (variableLength*)malloc(sizeof(variableLength));
                     filename->size = 20;
                     filename->data = (char*)malloc(20);
-                    sprintf(filename->data, "file_%03i.dat", count);
+                    snprintf(filename->data, 19, "file_%03i.dat", count);
                 }
                 if (filepath == NULL) {
-                    sprintf(ifilename, "%s", filename->data);
+                    snprintf(ifilename, MAX_FILENAME_SIZE, "%s", filename->data);
                 } else {
-                    sprintf(ifilename, "%s/%s", filepath, filename->data);
+                    snprintf(ifilename, MAX_FILENAME_SIZE, "%s/%s", filepath, filename->data);
                 }
                 for(i=0; i<strlen(ifilename); i++) 
                     if (ifilename[i] == ' ') 
diff --git a/ytnef/src/ytnef/settings.h b/ytnef/src/ytnef/settings.h
new file mode 100644
index 0000000..993e9cf
--- /dev/null
+++ b/ytnef/src/ytnef/settings.h
@@ -0,0 +1,27 @@
+/*
+*    Yerase's TNEF Stream Reader
+*    Copyright (C) 2003  Randall E. Hand
+*
+*    This program is free software; you can redistribute it and/or modify
+*    it under the terms of the GNU General Public License as published by
+*    the Free Software Foundation; either version 2 of the License, or
+*    (at your option) any later version.
+*
+*    This program is distributed in the hope that it will be useful,
+*    but WITHOUT ANY WARRANTY; without even the implied warranty of
+*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*    GNU General Public License for more details.
+*
+*    You should have received a copy of the GNU General Public License
+*    along with this program; if not, write to the Free Software
+*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+*
+*    You can contact me at randall.hand@gmail.com for questions or assistance
+*/
+
+#ifndef YTNEF_SRC_YTNEF_SETTINGS_H_
+#define YTNEF_SRC_YTNEF_SETTINGS_H_
+
+#define MAX_FILENAME_SIZE 1024
+
+#endif  // YTNEF_SRC_YTNEF_SETTINGS_H_
diff --git a/ytnef/src/ytnef/utility.c b/ytnef/src/ytnef/utility.c
index 6053bca..3bc68a7 100644
--- a/ytnef/src/ytnef/utility.c
+++ b/ytnef/src/ytnef/utility.c
@@ -1,3 +1,4 @@
+#include "settings.h"
 void fprintProperty(TNEFStruct TNEF, FILE *FPTR, DWORD PROPTYPE, DWORD PROPID, char TEXT[]) {
     variableLength *vl;
     if ((vl=MAPIFindProperty(&(TNEF.MapiProperties), PROP_TAG(PROPTYPE, PROPID))) != MAPI_UNDEFINED) { 
diff --git a/ytnef/src/ytnef/vcal.c b/ytnef/src/ytnef/vcal.c
index 54469b0..4435544 100644
--- a/ytnef/src/ytnef/vcal.c
+++ b/ytnef/src/ytnef/vcal.c
@@ -1,3 +1,4 @@
+#include "settings.h"
 unsigned char GetRruleCount(unsigned char a, unsigned char b) {
     return ((a << 8) | b);
 }
@@ -180,7 +181,7 @@ void PrintRrule(FILE *fptr, char *recur_
 }
 
 void SaveVCalendar(TNEFStruct TNEF) {
-    char ifilename[256];
+    char ifilename[MAX_FILENAME_SIZE];
     variableLength *filename;
     char *charptr, *charptr2;
     FILE *fptr;
@@ -190,9 +191,9 @@ void SaveVCalendar(TNEFStruct TNEF) {
     dtr thedate;
 
     if (filepath == NULL) {
-        sprintf(ifilename, "calendar.vcf");
+        snprintf(ifilename, MAX_FILENAME_SIZE, "calendar.vcf");
     } else {
-        sprintf(ifilename, "%s/calendar.vcf", filepath);
+        snprintf(ifilename, MAX_FILENAME_SIZE, "%s/calendar.vcf", filepath);
     }
     printf("%s\n", ifilename);
     if (savefiles == 0) 
diff --git a/ytnef/src/ytnef/vcard.c b/ytnef/src/ytnef/vcard.c
index 6e6e41a..2bfa17b 100644
--- a/ytnef/src/ytnef/vcard.c
+++ b/ytnef/src/ytnef/vcard.c
@@ -1,5 +1,6 @@
+#include "settings.h"
 void SaveVCard(TNEFStruct TNEF) {
-    char ifilename[512];
+    char ifilename[MAX_FILENAME_SIZE];
     FILE *fptr;
     variableLength *vl;
     variableLength *pobox, *street, *city, *state, *zip, *country;
@@ -10,29 +11,29 @@ void SaveVCard(TNEFStruct TNEF) {
         if ((vl=MAPIFindProperty(&(TNEF.MapiProperties), PROP_TAG(PT_STRING8, PR_COMPANY_NAME))) == MAPI_UNDEFINED) {
             if (TNEF.subject.size > 0) {
                 if (filepath == NULL) {
-                    sprintf(ifilename, "%s.vcard", TNEF.subject.data);
+                    snprintf(ifilename, MAX_FILENAME_SIZE, "%s.vcard", TNEF.subject.data);
                 } else {
-                    sprintf(ifilename, "%s/%s.vcard", filepath, TNEF.subject.data);
+                    snprintf(ifilename, MAX_FILENAME_SIZE, "%s/%s.vcard", filepath, TNEF.subject.data);
                 }
             } else {
                 if (filepath == NULL) {
-                    sprintf(ifilename, "unknown.vcard");
+                    snprintf(ifilename, MAX_FILENAME_SIZE, "unknown.vcard");
                 } else {
-                    sprintf(ifilename, "%s/unknown.vcard", filepath);
+                    snprintf(ifilename, MAX_FILENAME_SIZE, "%s/unknown.vcard", filepath);
                 }
             }
         } else {
             if (filepath == NULL) {
-                sprintf(ifilename, "%s.vcard", vl->data);
+                snprintf(ifilename, MAX_FILENAME_SIZE, "%s.vcard", vl->data);
             } else {
-                sprintf(ifilename, "%s/%s.vcard", filepath, vl->data);
+                snprintf(ifilename, MAX_FILENAME_SIZE, "%s/%s.vcard", filepath, vl->data);
             }
         }
     } else {
         if (filepath == NULL) {
-            sprintf(ifilename, "%s.vcard", vl->data);
+            snprintf(ifilename, MAX_FILENAME_SIZE, "%s.vcard", vl->data);
         } else {
-            sprintf(ifilename, "%s/%s.vcard", filepath, vl->data);
+            snprintf(ifilename, MAX_FILENAME_SIZE, "%s/%s.vcard", filepath, vl->data);
         }
     }
     for(i=0; i<strlen(ifilename); i++) 
diff --git a/ytnef/src/ytnef/vtask.c b/ytnef/src/ytnef/vtask.c
index aba346d..ee6580f 100644
--- a/ytnef/src/ytnef/vtask.c
+++ b/ytnef/src/ytnef/vtask.c
@@ -1,8 +1,9 @@
+#include "settings.h"
 void SaveVTask(TNEFStruct TNEF) {
     variableLength *vl;
     variableLength *filename;
     int index,i;
-    char ifilename[256];
+    char ifilename[MAX_FILENAME_SIZE];
     char *charptr, *charptr2;
     dtr thedate;
     FILE *fptr;
@@ -20,9 +21,9 @@ void SaveVTask(TNEFStruct TNEF) {
             vl->data[index--] = 0;
 
     if (filepath == NULL) {
-        sprintf(ifilename, "%s.vcf", vl->data);
+        snprintf(ifilename, MAX_FILENAME_SIZE, "%s.vcf", vl->data);
     } else {
-        sprintf(ifilename, "%s/%s.vcf", filepath, vl->data);
+        snprintf(ifilename, MAX_FILENAME_SIZE, "%s/%s.vcf", filepath, vl->data);
     }
     for(i=0; i<strlen(ifilename); i++) 
         if (ifilename[i] == ' ') 
